UnityEnvFile:
    3DBall:
        simple500: &env /Users/wangjianshu/UnityBuild/Ball/simple500/simple500.app
        hard1: C:/UnityBuild/Ball/hard1/hard1.exe
        hard3: C:/UnityBuild/Ball/hard3/hard3.exe
    RollerBall:
        OneFloor: C:/UnityBuild/RollerBall/OneFloor/RollerBall-custom.exe
        PureCamera: C:/UnityBuild/RollerBall/PureCamera/train.exe
    Boat:
        first: C:/UnityBuild/Boat/first/BoatTrain.exe
        second: C:/UnityBuild/Boat/second/BoatTrain.exe
        interval1: C:/UnityBuild/Boat/interval1/BoatTrain.exe
        no_border: C:/UnityBuild/Boat/no_border/BoatTrain.exe
        no_border2: C:/UnityBuild/Boat/no_border2/BoatTrain.exe

train:
    save_frequency: 20
    max_step: 2000      # max_step per episode, if gym->env->max_episode_steps > max_step, them PEB(Partial Episode Bootstraping), else TimeLimit.
    max_episode: 5000   # if not specify max_total_step, max_episode will control when training end.
    max_total_step: 1000000
    total_step_control: false   # only for gym training
    moving_average_episode: 100
    all_learner_print: true
    add_noise2buffer: false                  # add some noise data (obtain by random action) into replay buffer, in order to prevent overfitting
    add_noise2buffer_episode_interval: 10    # episode interval when adding noise into replay buffer while training
    add_noise2buffer_steps: 1000             # how many steps should be added into replay buffer
    info: None
    wandb_project: RLs

model:
    logger2file: false

unity:
    train:
        pre_fill_steps: 100
    env:
        file_path: *env
        train_time_scale: 100
        width: 1028
        height: 720
        resize: [84, 84]
        quality_level: 5
        inference_time_scale: 0
        target_frame_rate: 60
        reset_config: {}

gym:
    train:
        pre_fill_steps: 10000
        off_policy_step_eval: false
        eval_interval: 1000
        off_policy_step_eval_num: 100
        render: false
        render_episode: 50000
        eval_while_train: false
        max_eval_episode: 100
    env:
        render_mode: random_1 # first last [list] random_[num] or all.
        action_skip: false
        skip: 4
        obs_stack: false
        stack: 4
        obs_grayscale: false
        obs_resize: false
        resize: [84, 84]
        obs_scale: false
        noop: false
        noop_max: 30
        max_episode_steps: null         # min(train->max_step(Not Done), max_episode_steps(Done)) control the max length of episodes.

buffer:
    ER: {}
    PER:
        alpha: 0.6  # priority
        beta: 0.4   # importance sampling ratio
        epsilon: 0.01
        global_v: false
    NstepER:
        n: 4
    NstepPER:
        alpha: 0.6
        beta: 0.4
        epsilon: 0.01
        global_v: false
        n: 4
    EpisodeER:
        burn_in_time_step: 20
        train_time_step: 40   # null
